---
- name: Setup machine for mandrel-packaging
  hosts: all
  vars:
    configuration: default-openjdk
    mx_path: /opt/mx
    mandrel_path: /tmp/mandrel
    mandrel_repo: https://github.com/graalvm/mandrel.git
    jdk_path: /opt/jdk


  pre_tasks:
    - name: Include variables for configuration
      include_vars:
        file: "configurations/{{ configuration }}.yml"
    - name: Install core dependencies
      dnf:
        name: tar
        state: latest

  roles:
    - jdk
    - mx
    - maven

  tasks:
    - name: Install native-image dependencies
      dnf:
        name:
          - zlib-devel
          - glibc-devel
        state: latest
    - name: Clone mandrel repository
      git:
        repo: "{{ mandrel_repo }}"
        dest: "{{ mandrel_path }}"
        version: "{{ mandrel_version }}"
    - name: Copy mandrel-packaging
      copy:
        src: "{{ item }}"
        dest: "/root/"
      with_items:
        - "{{ playbook_dir }}/../build.java"
    - name: Set welcome message
      copy:
        dest: /etc/profile.d/welcome.sh
        content: |
          cat << EOF
                  __  ___                __          __
                 /  |/  /___  ____  ____/ /_______  / /
                / /|_/ / __ \/ __ \/ __  / ___/ _ \/ /
               / /  / / /_/ / / / / /_/ / /  /  __/ /
              /_/  /_/\__,_/_/ /_/\__,_/_/   \___/_/

          To build Mandrel:
            java -ea build.java

          To build maven artifacts locally:
            java -ea build.java --maven-install --maven-version .redhat-00001 --verbose

          To build maven artifacts with a maven proxy:
            java -ea build.java --maven-install --maven-version .redhat-00001 --maven-proxy https://repo1.maven.org/maven2/ --verbose

          To build maven artifacts using an alternative maven local repository:"
            java -ea build.java --maven-install --maven-version .redhat-00001 --maven-local-repository /tmp/.m2/repository --verbose

          To build maven artifacts overriding dependencies:
            java -ea build.java --maven-install --maven-version .redhat-00001 --dependencies \\
                id=ASM_7.1,version=7.1.0.redhat-00001,sha1=41bc48bf913569bd001cc132624f811d91004af4,sourceSha1=8c938bc977786f0f3964b394e28f31e726769bac \\
                id=...,version=...,sha1=...

          To deploy:
            java -ea build.java --maven-deploy --maven-version .redhat-00001 --maven-repo-id abc --maven-url http://1.2.3.4 --verbose

          EOF

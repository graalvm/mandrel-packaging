name: Test Ansible playbook

# The following aims to reduce CI CPU cycles by:
# 1. Cancelling any previous builds of this PR when pushing new changes to it
# 2. Cancelling any previous builds of a branch when pushing new changes to it in a fork
# 3. Cancelling any pending builds, but not active ones, when pushing to a branch in the main
#    repository. This prevents us from constantly cancelling CI runs, while being able to skip
#    intermediate builds. E.g., if we perform two pushes the first one will start a CI job and
#    the second one will add another one to the queue; if we perform a third push while the
#    first CI job is still running the previously queued CI job (for the second push) will be
#    cancelled and a new CI job will be queued for the latest (third) push.
concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository != 'graalvm/mandrel-packaging' }}

on:
  push:
    paths:
      - 'build.java'
      - 'resources/**'
      - 'ansible/**'
      - '.github/workflows/ansible.yml'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - 'build.java'
      - 'resources/**'
      - 'ansible/**'
      - '.github/workflows/ansible.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: |
        cd ansible
        AT='' make build-image
    - name: buildJDK
      run: |
        docker run --name=mandrel-builder -w /root --entrypoint "/bin/bash" mandrel-packaging --login -c "java -ea build.java --verbose --mandrel-home /opt/mandrel"
        docker ps -a
        docker cp mandrel-builder:/opt/mandrel/ ${{ github.workspace }}/mandrel/
    - name: Smoke tests
      run: |
        ${{ github.workspace }}/mandrel/bin/native-image --version
        echo "
        public class HelloStrict {
            public static void main(String[] args) {
                System.out.printf(
                    \"Hello %1$,.12f %2$,.12f %3$,.12f %n\"
                    , StrictMath.cos(0.0)
                    , StrictMath.IEEEremainder(3.0, 5.0)
                    , StrictMath.IEEEremainder(-16.3, 4.1)
                );
            }
        }
        " > HelloStrict.java
        ${{ github.workspace }}/mandrel/bin/javac HelloStrict.java
        ${{ github.workspace }}/mandrel/bin/java HelloStrict > java.txt
        ${{ github.workspace }}/mandrel/bin/native-image HelloStrict
        ./hellostrict > native.txt
        diff java.txt native.txt
    - name: Archive Mandrel build
      run: tar czf ${{ github.workspace }}/mandrel.tar.gz -C ${{ github.workspace }} mandrel
    - name: Upload Mandrel build
      uses: actions/upload-artifact@v1
      with:
        name: mandrel-java11-linux-amd64-test-build
        path: ${{ github.workspace }}/mandrel.tar.gz

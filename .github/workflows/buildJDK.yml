on:
  push:
    paths:
      - 'build.java'
      - 'resources/**'
      - '.github/workflows/buildJDK.yml'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'build.java'
      - 'resources/**'
      - '.github/workflows/buildJDK.yml'

env:
  MX_GIT_CACHE: refcache
  JAVA_HOME: /opt/jdk
  MANDREL_REPO: ${{ github.workspace }}/mandrel
  MX_HOME: ${{ github.workspace }}/mx
  MANDREL_VERSION: 10.9.8.7 test-build

jobs:
  build-and-test:
    name: Build and test ${{ matrix.mandrel-ref }} branch/tag
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mandrel-ref: [graal/master, mandrel/20.1]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: graalvm/mandrel.git
        fetch-depth: 1
        ref: ${{ matrix.mandrel-ref }}
        path: ${{ github.workspace }}/mandrel
    - uses: actions/checkout@v2
      with:
        repository: graalvm/mx.git
        fetch-depth: 1
        ref: master
        path: ${{ github.workspace }}/mx
    - uses: actions/cache@v1
      with:
        path: ~/.mx
        key: ${{ runner.os }}-mx-${{ hashFiles('**/suite.py') }}
        restore-keys: |
          ${{ runner.os }}-mx-
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-mx-${{ hashFiles('**/suite.py') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.quarkus-name }}-maven-
    - name: Get latest openJDK11 with static libs
      run: |
        curl -sL https://api.adoptopenjdk.net/v3/binary/latest/11/ea/linux/x64/jdk/hotspot/normal/openjdk -o jdk.tar.gz
        curl -sL https://api.adoptopenjdk.net/v3/binary/latest/11/ea/linux/x64/staticlibs/hotspot/normal/openjdk -o jdk-static-libs.tar.gz
        mkdir -p ${JAVA_HOME}
        tar xf jdk.tar.gz -C ${JAVA_HOME} --strip-components=1
        tar xf jdk-static-libs.tar.gz -C ${JAVA_HOME} --strip-components=1
        echo ${JAVA_HOME}
        ${JAVA_HOME}/bin/java --version
    - name: Build Mandrel JDK
      run: |
        ${JAVA_HOME}/bin/java -ea build.java --verbose --mx-home ${MX_HOME} --mandrel-repo ${MANDREL_REPO} --mandrel-version "${MANDREL_VERSION}" --archive-suffix tar.gz
        export MANDREL_VERSION_UNTIL_SPACE="$( echo ${MANDREL_VERSION} | sed -e 's/\([^ ]*\).*/\1/;t' )"
        export ARCHIVE_NAME="mandrel-java11-linux-amd64-${MANDREL_VERSION_UNTIL_SPACE}.tar.gz"
        mv ${ARCHIVE_NAME} mandrel-java11-linux-amd64.tar.gz
    - name: Smoke tests
      run: |
        export MANDREL_VERSION_UNTIL_SPACE="$( echo ${MANDREL_VERSION} | sed -e 's/\([^ ]*\).*/\1/;t' )"
        export MANDREL_HOME=${PWD}/mandrel-java11-${MANDREL_VERSION_UNTIL_SPACE}
        ${MANDREL_HOME}/bin/native-image --version
        ${MANDREL_HOME}/bin/native-image --version | grep "${MANDREL_VERSION}"
        echo "
        public class HelloStrict {
            public static void main(String[] args) {
                System.out.printf(
                    \"Hello %1$,.12f %2$,.12f %3$,.12f %n\"
                    , StrictMath.cos(0.0)
                    , StrictMath.IEEEremainder(3.0, 5.0)
                    , StrictMath.IEEEremainder(-16.3, 4.1)
                );
            }
        }
        " > HelloStrict.java
        ${MANDREL_HOME}/bin/javac HelloStrict.java
        ${MANDREL_HOME}/bin/java HelloStrict | tee java.txt
        ${MANDREL_HOME}/bin/native-image HelloStrict
        ./hellostrict | tee native.txt
        diff java.txt native.txt
    - name: Upload Mandrel build
      uses: actions/upload-artifact@v1
      with:
        name: mandrel-java11-linux-amd64-test-build
        path: mandrel-java11-linux-amd64.tar.gz
    - name: Build Mandrel JDK with tarxz suffix
      run: |
        ${JAVA_HOME}/bin/java -ea build.java --mx-home ${MX_HOME} --mandrel-repo ${MANDREL_REPO} --mandrel-version "${MANDREL_VERSION}" --archive-suffix tarxz --skip-clean --skip-java --skip-native
        export MANDREL_VERSION_UNTIL_SPACE="$( echo ${MANDREL_VERSION} | sed -e 's/\([^ ]*\).*/\1/;t' )"
        export ARCHIVE_NAME="mandrel-java11-linux-amd64-${MANDREL_VERSION_UNTIL_SPACE}.tarxz"
        mv ${ARCHIVE_NAME} mandrel-java11-linux-amd64.tarxz
    - name: Upload tarxz Mandrel build
      uses: actions/upload-artifact@v1
      with:
        name: mandrel-java11-linux-amd64-test-build-tarxz
        path: mandrel-java11-linux-amd64.tarxz
